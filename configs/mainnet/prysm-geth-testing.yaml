docker:
   network-name: "ethereum-testnet"
   ip-subnet: "10.0.20.0/24"
   volumes: ['./data:/data/', './:/source/']
   # for writing the docker-compose.yaml
   #
files:
 # all files with respect to docker path
 testnet-root: '/data/'

 # execution genesis files.
 geth-genesis-file: "/data/geth-genesis.json"
 besu-genesis-file: "/data/besu-genesis.json"
 nether-mind-genesis-file: "/data/nethermind-genesis.json" # nethermind cares about envargs

 consensus-config-file: "/data/consensus-config.yaml"
 consensus-genesis-file: "/data/genesis.ssz"
 consensus-bootnode-file: "/data/eth2-bootnode-enr.dat"

 etb-config-file: "/data/etb-config.yaml"
 testnet-dir: "/data/local_testnet" # where client setups occur
 #  execution-bootstrap-dir: "/data/local_testnet/execution-bootstrapper"
 docker-compose-file:  "/source/docker-compose.yaml" #wrt to docker config
 # this file is created when all testnet directories have been written.
 consensus-checkpoint-file: "/data/consensus-clients-ready"
 #this file is written with its time for the first execution client to come up.
 execution-checkpoint-file: "/data/execution-clients-ready"
 # execution client bootnode/bootstrapper. Contains enode+\n for all bootstrap
 consensus-bootnode-checkpoint-file: "/data/consensus-bootnodes-ready"
 # contract deployment block hash
 deposit-contract-deployment-block-hash-file: "/data/deposit_contract_block_hash.txt"
 # contract deployment block number
 deposit-contract-deployment-block-number-file: "/data/deposit_contract_block.txt"
 # notify all clients the etb-config file is ready.
 etb-config-checkpoint-file: "/data/etb-config-file-ready"


config-params:

#  deposit-contract-address: "0x8c594691c0e592ffa21f153a16ae41db5befcaaa"
 deposit-contract-address: "0x1111111111111111111111111111111111111111"

 # used for configuring execution genesis
 execution-layer:
   seconds-per-eth1-block: 14
   execution-genesis-delay: 0
   chain-id: 0x01000666
   network-id: 0x01000666

   # the first execution node that comes alive to bootstrap the network.
   execution-bootstrapper: "geth-bootstrapper"

   #TODO: remove the necessity for this, we no longer need to config this.

 # used for generating the consensus config placed in /data/eth2-config.yaml
 consensus-layer:
   # cconsensus-genesis-delay: 225 # eth1-follow-distance*seconds-per-eth1-block + 1
   preset-base: 'mainnet'
   config-name: "local-testnet0"
   min-genesis-active-validator-count: 50 # custom preseeded into genesis state.
   min-validator-withdrawability-delay: 1 # how soon we can process withdrawals
   shard-committee-period: 1 # how soon we can process withdrawals
   eth1-follow-distance: 16 # allow past eth1 blocks to be processed.

   forks:
     # forks that aren't in far-future will be considered as possible end forks for experiments.

     phase0-fork-version: 0x01000666
     phase0-fork-epoch: 0 # genesis

     altair-fork-version: 0x02000666
     altair-fork-epoch: 0

     bellatrix-fork-version: 0x03000666
     bellatrix-fork-epoch: 0

     capella-fork-version: 0x04000666
     capella-fork-epoch: 2 # testing capella

     eip4844-fork-version: 0x05000666
     eip4844-fork-epoch: 18446744073709551615 # far future

     sharding-fork-version: 0x06000666
     sharding-fork-epoch: 18446744073709551615 # far future

accounts:
 eth1-account-mnemonic: "cat swing flag economy stadium alone churn speed unique patch report train"
 eth1-passphrase: "testnet-password"
 # if we are using a clique network, the first premine is signer
 eth1-premine:
     "m/44'/60'/0'/0/0" : "100000000"
     "m/44'/60'/0'/0/1" : "100000000"
     "m/44'/60'/0'/0/2" : "100000000"
     "m/44'/60'/0'/0/3" : "100000000"

 validator-mnemonic: "ocean style run case glory clip into nature guess jacket document firm fiscal hello kite disagree symptom tide net coral envelope wink render festival"
#  withdrawl-mnemonic: "scatter supreme field crazy unveil chronic favorite middle front umbrella mutual gentle word wild economy dress whale whip method office report eternal garment parrot"

execution-configs:

 geth-execution-config:
   execution-client: "geth"
   execution-log-level: "4" # detail
   execution-http-apis: "debug,txpool,admin,net,eth,web3,personal,engine,clique,miner"
   execution-ws-apis: "admin,net,eth,engine"
   execution-http-port: 8645
   execution-ws-port: 8646
   execution-p2p-port: 666
   execution-engine-http-port: 8551   # http/ws same port.
   execution-engine-ws-port: 8551   # include for nimbus
   execution-metric-port: 9001

 besu-execution-config:
   execution-client: "besu"
   execution-log-level: "info"
   execution-http-apis: "ADMIN,ETH,NET,TXPOOL,WEB3,ENGINE"
   execution-ws-apis: "ADMIN,ETH,NET,TXPOOL,WEB3,ENGINE"
   execution-http-port: 8645
   execution-ws-port: 8646
   execution-p2p-port: 666
   execution-engine-http-port: 8551
   execution-engine-ws-port: 8551
   execution-metric-port: 9001

 nethermind-execution-config:
   execution-client: "nethermind"
   execution-log-level: "info"
   execution-http-apis: "net,eth,consensus,subscribe,web3,admin"
   execution-ws-apis: "net,eth,consensus,subscribe,web3,admin"
   execution-http-port: 8645
   execution-ws-port: 8646
   execution-engine-http-port: 8551 # doesn't do http/ws the same.
   execution-engine-ws-port: 8552
   execution-p2p-port: 666
   execution-metric-port: 9001

consensus-configs:
 base-consensus-client:
   num-validators: 10       # number of validators for every client node
   # start ports increment each time we have a node.

   consensus-p2p-port: 4000    # start port used for discovery
   consensus-beacon-api-port: 5000   # start port used for the beacon rest API
   consensus-beacon-rpc-port: 5500
   consensus-validator-rpc-port: 6500
   consensus-beacon-metric-port: 8000 # start port used for beacon node metrics.
   consensus-validator-metric-port: 9000 # start port used for validator client metrics.
   # entrypoints placed here are used by the consensus clients
#
#    http-web3-ip-addr: "127.0.0.1"
#    ws-web3-ip-addr: "127.0.0.1"

client-modules:
# Consensus Client Setup:
# Each consensus node comes with 1 validators, and 1 nodes.
# If one continues we know it to be a unique problem
#
# prysm-geth        num nodes: 1 node: 10.0.20.10 validator offset: 0
# teku-geth         num nodes: 1 node: 10.0.20.20 validator offset: 4
# nimbus-geth       num nodes: 1 node: 10.0.20.30 validator offset: 8
# lh-geth           num nodes: 1 node: 10.0.20.40 validator offset: 12
# ls-geth           num nodes: 1 node: 10.0.20.50 validator offset: 16


###############################################################################
####### All Consensus Clients paired with a Geth Execution Client. ############
###############################################################################
 prysm-geth:
   # docker-compose
   image: "etb-all-clients"
   tag: "capella"
   container-name: "prysm-client-geth"
   start-ip-addr: "10.0.20.10"
   depends: "ethereum-testnet-bootstrapper"
   num-nodes: 1

   # consensus-info
   consensus-client: "prysm"
   consensus-config: "base-consensus-client"
   consensus-launcher: "/source/deps/launchers/cl/launch-prysm.sh"
   validator-offset-start: 0
   testnet-dir: '/data/local_testnet/prysm-geth'

   # execution-info
   execution-client: "geth"
   execution-config: "geth-execution-config"
   execution-launcher: "/source/deps/launchers/el/launch-geth.sh"

   # shared-info
   jwt-secret-file: "/data/local_testnet/prysm-geth/jwt-secret"

   # args specific to prysm nodes, these are loaded into the dockers env at runtime.
   additional-env:
     prysm-debug-level: "debug"
     wallet-path: '/data/local_testnet/prysm-geth/wallet-password.txt'
     validator-password: "testnet-password"

 teku-geth:
   # docker-compose
   image: "etb-all-clients"
   tag: "capella"
   container-name: "teku-client-geth"
   start-ip-addr: "10.0.20.20"
   depends: "ethereum-testnet-bootstrapper"
   num-nodes: 1

   # consensus-info
   consensus-client: "teku"
   consensus-config: "base-consensus-client"
   consensus-launcher: "/source/deps/launchers/cl/launch-teku.sh"
   validator-offset-start: 10
   testnet-dir: '/data/local_testnet/teku-geth'

   # execution-info
   execution-client: "geth"
   execution-config: "geth-execution-config"
   execution-launcher: "/source/deps/launchers/el/launch-geth.sh"

   # shared-info
   jwt-secret-file: "/data/local_testnet/teku-geth/jwt-secret"

   # args specific to teku nodes.
   additional-env:
     teku-debug-level: "DEBUG"

 nimbus-geth:
   # docker-compose
   image: "etb-all-clients"
   tag: "capella"
   container-name: "nimbus-client-geth"
   start-ip-addr: "10.0.20.30"
   num-nodes: 1

   # consensus-info
   consensus-client: "nimbus"
   consensus-config: "base-consensus-client"
   consensus-launcher: "/source/deps/launchers/cl/launch-nimbus.sh"
   validator-offset-start: 20
   testnet-dir: '/data/local_testnet/nimbus-geth'

   # execution-info
   execution-client: "geth"
   execution-config: "geth-execution-config"
   execution-launcher: "/source/deps/launchers/el/launch-geth.sh"

   # shared-info
   jwt-secret-file: "/data/local_testnet/nimbus-geth/jwt-secret"

   additional-env:
     nimbus-debug-level: "TRACE"


 lighthouse-geth:
   # docker-compose
   image: "etb-all-clients"
   tag: "capella"
   container-name: "lighthouse-client-geth"
   start-ip-addr: "10.0.20.40"
   num-nodes: 1

   # consensus-info
   consensus-client: "lighthouse"
   consensus-config: "base-consensus-client"
   consensus-launcher: "/source/deps/launchers/cl/launch-lighthouse.sh"
   validator-offset-start: 30
   testnet-dir: '/data/local_testnet/lighthouse-geth'

   # execution-info
   execution-client: "geth"
   execution-config: "geth-execution-config"
   execution-launcher: "/source/deps/launchers/el/launch-geth.sh"

   # shared-info
   jwt-secret-file: "/data/local_testnet/lighthouse-geth/jwt-secret"

   additional-env:
     lighthouse-debug-level: "debug"

 lodestar-geth:
   # docker-compose
   image: "etb-all-clients"
   tag: "capella"
   container-name: "lodestar-client-geth"
   start-ip-addr: "10.0.20.50"
   num-nodes: 1

   # consensus-info
   consensus-client: "lodestar"
   consensus-config: "base-consensus-client"
   consensus-launcher: "/source/deps/launchers/cl/launch-lodestar.sh"
   validator-offset-start: 40
   testnet-dir: '/data/local_testnet/lodestar-geth'

   # execution-info
   execution-client: "geth"
   execution-config: "geth-execution-config"
   execution-launcher: "/source/deps/launchers/el/launch-geth.sh"

   # shared-info
   jwt-secret-file: "/data/local_testnet/lodestar-geth/jwt-secret"

   additional-env:
     lstar-debug-level: "debug"

generic-modules:

 ethereum-testnet-bootstrapper:
   image: "ethereum-testnet-bootstrapper"
   tag: "latest"
   container-name: "testnet-bootstrapper"
   start-ip-addr: "10.0.20.202"
   num-nodes: 1
   entrypoint: "/source/entrypoint.sh --config /data/etb-config.yaml --bootstrap-testnet"

 status-check:
   client-name: "status-check"
   image: "ethereum-testnet-bootstrapper"
   tag: "latest"
   container-name: "status-check"
   start-ip-addr: "10.0.20.207"
   num-nodes: 1
   entrypoint: "python3 /source/apps/status-check.py --config /data/etb-config.yaml --phase0-slot 58 --phase1-slot 60 --phase2-slot 96 --phase3-slot 128 --number-of-checks 3 --log-prefix antithesis --terminate-experiment-prefix terminate"
#    entrypoint: "python3 /source/apps/status-check.py --config /data/etb-config.yaml --no-terminate --number-of-checks 3"

 eth2-bootnode:
   # args for docker-compose
   client-name: "eth2-bootnode"
   container-name: "eth2-bootnode"
   image: "ethereum-testnet-bootstrapper"
   tag: "latest"
   start-ip-addr: "10.0.20.201"
   entrypoint: "/source/deps/launchers/bootnodes/launch-eth2-bootnode.sh"
   num-nodes: 1 #should always be 1.

   additional-env:
     consensus-bootnode-start-ip-addr: "10.0.20.201"
     consensus-bootnode-private-key: "bc971f814d7bd37f7502cc67408c4f2c5a06e1b3d48dc041e42b5478154df1a8" # private key for the bootnode to use
     consensus-bootnode-enr-port: 9001 #port in the enr
     consensus-bootnode-api-port: 6000 # port for web api.
     consensus-bootnode-enr-file: "/data/eth2-bootnode-enr.dat" # this must match the file at the top.

 tx-fuzzer:
   # launch the transaction spammer
   client-name: "tx-fuzzer"
   container-name: "tx-fuzzer"
   image: "etb-all-clients"
   tag: "capella"
   start-ip-addr: "10.0.20.205"
   entrypoint: "python3 /source/apps/tx-fuzz.py --config /data/etb-config.yaml --fuzz-mode spam --target-ip 10.0.20.10 --target-port 8645 --tx-fuzz-delay 30 --tx-fuzz-path /usr/local/bin/tx-fuzz"
   num-nodes: 1 #should always be 1.

 withdrawal-spammer:
   client-name: "withdrawal-spammer"
   container-name: "withdrawal-spammer"
   image: "ethereum-testnet-bootstrapper"
   tag: "latest"
   start-ip-addr: "10.0.20.206"
   entrypoint: "python3 /source/apps/validator-operation-spammer.py --config /data/etb-config.yaml"
   num-nodes: 1 #should always be 1.
