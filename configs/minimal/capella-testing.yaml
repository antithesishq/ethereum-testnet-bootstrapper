# Running a minimal spec'd capella local testnet with fuzzing enabled.
# We start genesis with 120 validators and perform deposits. Capella
# occurs at epoch 14 to allow some deposits to be processed.

# parameters for building the docker network
docker:
    network-name: "ethereum-testnet"
    ip-subnet: "10.0.20.0/24"
    volumes: ['./data:/data/', './:/source/', './capture_logs:/logs']

# static files used by the bootstrapper, clients, and other modules
files:
  # all files with respect to docker path
  testnet-root: '/data/'

  # execution genesis files.
  geth-genesis-file: "/data/geth-genesis.json"
  besu-genesis-file: "/data/besu-genesis.json"
  nether-mind-genesis-file: "/data/nethermind-genesis.json" # nethermind cares about envargs

  consensus-config-file: "/data/consensus-config.yaml"
  consensus-genesis-file: "/data/genesis.ssz"
  consensus-bootnode-file: "/data/eth2-bootnode-enr.dat"

  etb-config-file: "/data/etb-config.yaml"
  testnet-dir: "/data/local_testnet" # where client setups occur
  validators-checkpoint-file: "/data/validators-to-client-mapping"
  docker-compose-file:  "/source/docker-compose.yaml" #wrt to docker config

  # this file is created when all testnet directories have been written.
  consensus-checkpoint-file: "/data/consensus-clients-ready"
  #this file is written with its time for the first execution client to come up.
  execution-checkpoint-file: "/data/execution-clients-ready"
  # execution client bootnode/bootstrapper. Contains enode+\n for all bootstrap
  consensus-bootnode-checkpoint-file: "/data/consensus-bootnodes-ready"
  # contract deployment block hash
  deposit-contract-deployment-block-hash-file: "/data/deposit_contract_block_hash.txt"
  # contract deployment block number
  deposit-contract-deployment-block-number-file: "/data/deposit_contract_block.txt"
  # notify all clients the etb-config file is ready.
  etb-config-checkpoint-file: "/data/etb-config-file-ready"

# configuration parameters for the testnet (EL + CL)
config-params:
  deposit-contract-address: "0x8c594691c0e592ffa21f153a16ae41db5befcaaa"
  # used for configuring execution genesis
  execution-layer:
    seconds-per-eth1-block: 14
    execution-genesis-delay: 0
    chain-id: 1337
    network-id: 1337

    # the first execution node that comes alive to bootstrap the network.
    execution-bootstrapper: "geth-bootstrapper"


  # used for generating the consensus config placed in /data/eth2-config.yaml
  consensus-layer:
    preset-base: 'minimal'
    config-name: "local-minimal-testnet"

    #config param overrides
    # custom pre-seeded into genesis state
    # NOTE: if the config specified more validators than this, any validators
    #       over this number will require deposit transactions during the
    #       experiment in order to become active.
    #       Cf. concensus-configs/<config>/num-validators
    #       Cf. clients-instances/<node>/validator-offset-start
    min-genesis-active-validator-count: 90
    min-validator-withdrawability-delay: 2 # increase the withdrawal speed
    shard-committee-period: 2 # increase the withdrawal speed

    forks:
      # forks that aren't in far-future will be considered as possible end forks for experiments.

      phase0-fork-version: 0x01000666
      phase0-fork-epoch: 0

      altair-fork-version: 0x02000666
      altair-fork-epoch: 0

      bellatrix-fork-version: 0x03000666
      bellatrix-fork-epoch: 0

      capella-fork-version: 0x04000666
      capella-fork-epoch: 14

      eip4844-fork-version: 0x05000666
      eip4844-fork-epoch: 18446744073709551615 # far future

      sharding-fork-version: 0x06000666
      sharding-fork-epoch: 18446744073709551615 # far future

# accounts used
accounts:
  eth1-account-mnemonic: "cat swing flag economy stadium alone churn speed unique patch report train"
  eth1-passphrase: "testnet-password"
  # if we are using a clique network, the first premine is signer
  eth1-premine:
      "m/44'/60'/0'/0/0" : "100000000"
      "m/44'/60'/0'/0/1" : "100000000"
      "m/44'/60'/0'/0/2" : "100000000"
      "m/44'/60'/0'/0/3" : "100000000"

  eth1-withdrawal-address: "0xF29Ff96aaEa6C9A1fBa851f74737f3c069d4f1a9"

  validator-mnemonic: "ocean style run case glory clip into nature guess jacket document firm fiscal hello kite disagree symptom tide net coral envelope wink render festival"
#  withdrawl-mnemonic: "scatter supreme field crazy unveil chronic favorite middle front umbrella mutual gentle word wild economy dress whale whip method office report eternal garment parrot"

# configuration options used for execution clients
execution-configs:

  geth-execution-config:
    client: "geth"
    launcher: "/source/deps/launchers/el/launch-geth.sh"

    log-level: "4" # detail
    http-apis: "debug,txpool,admin,net,eth,web3,personal,engine,clique,miner"
    ws-apis: "admin,net,eth,engine"
    http-port: 8645
    ws-port: 8646
    p2p-port: 666
    engine-http-port: 8551   # http/ws same port.
    engine-ws-port: 8551   # include for nimbus
    metric-port: 9001

  besu-execution-config:
    client: "besu"
    launcher: "/source/deps/launchers/el/launch-besu.sh"
    log-level: "info"
    http-apis: "ADMIN,ETH,NET,TXPOOL,WEB3,ENGINE"
    ws-apis: "ADMIN,ETH,NET,TXPOOL,WEB3,ENGINE"
    http-port: 8645
    ws-port: 8646
    p2p-port: 666
    engine-http-port: 8551
    engine-ws-port: 8551
    metric-port: 9001

  nethermind-execution-config:
    client: "nethermind"
    log-level: "info"
    launcher: "/source/deps/launchers/el/launch-nethermind.sh"
    http-apis: "net,eth,consensus,subscribe,web3,admin"
    ws-apis: "net,eth,consensus,subscribe,web3,admin"
    http-port: 8645
    ws-port: 8646
    engine-http-port: 8551 # doesn't do http/ws the same.
    engine-ws-port: 8552
    p2p-port: 666
    metric-port: 9001

# configuration options used for consensus clients
consensus-configs:

  prysm-consensus-client:
    client: "prysm"
    launcher: "/source/deps/launchers/cl/launch-prysm.sh"
    num-validators: 5       # number of validators for every client node

    log-level: "debug"

    p2p-port: 4000    # start port used for discovery
    beacon-api-port: 5000   # start port used for the beacon rest API
    beacon-rpc-port: 5500
    validator-rpc-port: 6500
    beacon-metric-port: 8000 # start port used for beacon node metrics.
    validator-metric-port: 9000 # start port used for validator client metrics.

  nimbus-consensus-client:
    client: "nimbus"
    launcher: "/source/deps/launchers/cl/launch-nimbus.sh"
    num-validators: 5       # number of validators for every client node
    # start ports increment each time we have a node.
    log-level: "debug"

    p2p-port: 4000    # start port used for discovery
    beacon-api-port: 5000   # start port used for the beacon rest API
    beacon-rpc-port: 5500
    validator-rpc-port: 6500
    beacon-metric-port: 8000 # start port used for beacon node metrics.
    validator-metric-port: 9000 # start port used for validator client metrics.

  teku-consensus-client:
    client: "teku"
    launcher: "/source/deps/launchers/cl/launch-teku.sh"
    log-level: "DEBUG"

    num-validators: 5       # number of validators for every client node

    p2p-port: 4000    # start port used for discovery
    beacon-api-port: 5000   # start port used for the beacon rest API
    beacon-rpc-port: 5500
    validator-rpc-port: 6500
    beacon-metric-port: 8000 # start port used for beacon node metrics.
    validator-metric-port: 9000 # start port used for validator client metrics.

  lighthouse-consensus-client:
    client: "lighthouse"
    launcher: "/source/deps/launchers/cl/launch-lighthouse.sh"
    num-validators: 5       # number of validators for every client node
    # start ports increment each time we have a node.
    log-level: "debug"
    p2p-port: 4000    # start port used for discovery
    beacon-api-port: 5000   # start port used for the beacon rest API
    beacon-rpc-port: 5500
    validator-rpc-port: 6500
    beacon-metric-port: 8000 # start port used for beacon node metrics.
    validator-metric-port: 9000 # start port used for validator client metrics.

  lodestar-consensus-client:
    client: "lodestar"
    launcher: "/source/deps/launchers/cl/launch-lodestar.sh"
    num-validators: 5       # number of validators for every client node
    # start ports increment each time we have a node.
    log-level: "debug"
    p2p-port: 4000    # start port used for discovery
    beacon-api-port: 5000   # start port used for the beacon rest API
    beacon-rpc-port: 5500
    validator-rpc-port: 6500
    beacon-metric-port: 8000 # start port used for beacon node metrics.
    validator-metric-port: 9000 # start port used for validator client metrics.

  teku-consensus-client-whale:
    client: "teku"
    launcher: "/source/deps/launchers/cl/launch-teku.sh"
    log-level: "DEBUG"

    num-validators: 25       # number of validators for every client node

    p2p-port: 4000    # start port used for discovery
    beacon-api-port: 5000   # start port used for the beacon rest API
    beacon-rpc-port: 5500
    validator-rpc-port: 6500
    beacon-metric-port: 8000 # start port used for beacon node metrics.
    validator-metric-port: 9000 # start port used for validator client metrics.

# ETBClients
# These clients have both an execution and consensus client pair running
client-instances:

###############################################################################
####### All Consensus Clients paired with a Geth Execution Client. ############
###############################################################################

  # Geth clients
  prysm-geth:
    # docker-compose
    image: "etb-all-clients"
    tag: "minimal"
    start-ip-address: "10.0.20.10"
    num-nodes: 1

    # consensus-info
    consensus-config: "prysm-consensus-client"
    execution-config: "geth-execution-config"

    validator-offset-start: 0

    additional-env:
      validator-password: "testnet-password"

  teku-geth:
    # docker-compose
    image: "etb-all-clients"
    tag: "minimal"
    start-ip-address: "10.0.20.20"
    num-nodes: 1

    # consensus-info
    consensus-config: "teku-consensus-client"
    execution-config: "geth-execution-config"

    validator-offset-start: 5

  lighthouse-geth:
    # docker-compose
    image: "etb-all-clients"
    tag: "minimal"
    start-ip-address: "10.0.20.30"
    num-nodes: 1

    # consensus-info
    consensus-config: "lighthouse-consensus-client"
    execution-config: "geth-execution-config"

    validator-offset-start: 10

  lodestar-geth:
    # docker-compose
    image: "etb-all-clients"
    tag: "minimal"
    start-ip-address: "10.0.20.40"
    num-nodes: 1

    # consensus-info
    consensus-config: "lodestar-consensus-client"
    execution-config: "geth-execution-config"

    validator-offset-start: 15

    additional-env:
      lodestar-preset: "minimal"

  nimbus-geth:
    # docker-compose
    image: "etb-all-clients"
    tag: "minimal"
    start-ip-address: "10.0.20.50"
    num-nodes: 1

    # consensus-info
    consensus-config: "nimbus-consensus-client"
    execution-config: "geth-execution-config"

    validator-offset-start: 20

  # Besu clients

  prysm-besu:
    # docker-compose
    image: "etb-all-clients"
    tag: "minimal"
    start-ip-address: "10.0.20.60"
    num-nodes: 1

    # consensus-info
    consensus-config: "prysm-consensus-client"
    execution-config: "besu-execution-config"

    validator-offset-start: 25

    additional-env:
      validator-password: "testnet-password"

  teku-besu:
    # docker-compose
    image: "etb-all-clients"
    tag: "minimal"
    start-ip-address: "10.0.20.70"
    num-nodes: 1

    # consensus-info
    consensus-config: "teku-consensus-client"
    execution-config: "besu-execution-config"

    validator-offset-start: 30

  lighthouse-besu:
    # docker-compose
    image: "etb-all-clients"
    tag: "minimal"
    start-ip-address: "10.0.20.80"
    num-nodes: 1

    # consensus-info
    consensus-config: "lighthouse-consensus-client"
    execution-config: "besu-execution-config"

    validator-offset-start: 35

  lodestar-besu:
    # docker-compose
    image: "etb-all-clients"
    tag: "minimal"
    start-ip-address: "10.0.20.90"
    num-nodes: 1

    # consensus-info
    consensus-config: "lodestar-consensus-client"
    execution-config: "besu-execution-config"

    validator-offset-start: 40

    additional-env:
      lodestar-preset: "minimal"

  nimbus-besu:
    # docker-compose
    image: "etb-all-clients"
    tag: "minimal"
    start-ip-address: "10.0.20.100"
    num-nodes: 1

    # consensus-info
    consensus-config: "nimbus-consensus-client"
    execution-config: "besu-execution-config"

    validator-offset-start: 45

# Nethermind clients

  prysm-nethermind:
    # docker-compose
    image: "etb-all-clients"
    tag: "minimal"
    start-ip-address: "10.0.20.110"
    num-nodes: 1

    # consensus-info
    consensus-config: "prysm-consensus-client"
    execution-config: "nethermind-execution-config"

    validator-offset-start: 50

    additional-env:
      validator-password: "testnet-password"

  teku-nethermind:
    # docker-compose
    image: "etb-all-clients"
    tag: "minimal"
    start-ip-address: "10.0.20.120"
    num-nodes: 1

    # consensus-info
    consensus-config: "teku-consensus-client"
    execution-config: "nethermind-execution-config"

    validator-offset-start: 55

  lighthouse-nethermind:
    # docker-compose
    image: "etb-all-clients"
    tag: "minimal"
    start-ip-address: "10.0.20.130"
    num-nodes: 1

    # consensus-info
    consensus-config: "lighthouse-consensus-client"
    execution-config: "nethermind-execution-config"

    validator-offset-start: 60

  lodestar-nethermind:
    # docker-compose
    image: "etb-all-clients"
    tag: "minimal"
    start-ip-address: "10.0.20.140"
    num-nodes: 1

    # consensus-info
    consensus-config: "lodestar-consensus-client"
    execution-config: "nethermind-execution-config"

    validator-offset-start: 65

    additional-env:
      lodestar-preset: "minimal"

  nimbus-nethermind:
    # docker-compose
    image: "etb-all-clients"
    tag: "minimal"
    start-ip-address: "10.0.20.150"
    num-nodes: 1

    # consensus-info
    consensus-config: "nimbus-consensus-client"
    execution-config: "nethermind-execution-config"

    validator-offset-start: 70

  # clients to catch the extra deposits
  teku-whale:
    # docker-compose
    image: "etb-all-clients"
    tag: "minimal"
    start-ip-address: "10.0.20.160"
    num-nodes: 1

    # consensus-info
    consensus-config: "teku-consensus-client-whale"
    execution-config: "geth-execution-config"

    validator-offset-start: 75

# generic instances that run fuzzers/health checks/etc.
generic-instances:
  # the bootstrapper that builds the network.
  ethereum-testnet-bootstrapper:
    image: "ethereum-testnet-bootstrapper"
    tag: "latest"
    start-ip-address: "10.0.20.202"
    num-nodes: 1
    entrypoint: "/source/entrypoint.sh --config /data/etb-config.yaml --bootstrap-testnet"

  status-check:
    image: "ethereum-testnet-bootstrapper"
    tag: "latest"
    start-ip-address: "10.0.20.207"
    num-nodes: 1
    # entrypoint: "python3 /source/apps/status-check.py --config /data/etb-config.yaml --no-terminate"
    entrypoint: "python3 /source/apps/status-check.py --config /data/etb-config.yaml --phase0-slot 96 --phase1-slot 104 --phase2-slot 120 --phase3-slot 128"
    # root state is 12 (first deposits are processed here) start fuzzing epoch is 13, capella is 14, stop at 15. Healed by 16.

  # spam regular deposits
  validator-operation-fuzzer:
    image: "etb-all-clients"
    tag: "minimal"
    start-ip-address: "10.0.20.208"
    num-nodes: 1
    entrypoint: "python3 /source/apps/validator-operation-spammer.py --config /data/etb-config.yaml --only-valid-deposits"

  # spam transactions at a randomly chosen node
  # slot-delay should be shortly before the end of status-check phase0 slot
  tx-spammer:
    image: "etb-all-clients"
    tag: "minimal-fuzz"
    start-ip-address: "10.0.20.209"
    num-nodes: 1
    entrypoint: "python3 /source/apps/tx-fuzz.py --fuzz-mode spam --config /data/etb-config.yaml --slot-delay 80 --target-ip 10.0.20.30 --target-port 8645"


  eth2-bootnode:
    image: "ethereum-testnet-bootstrapper"
    tag: "latest"
    start-ip-address: "10.0.20.201"
    entrypoint: "/source/deps/launchers/bootnodes/launch-eth2-bootnode.sh"
    num-nodes: 1 #should always be 1.

    additional-env:
      consensus-bootnode-start-ip-addr: "10.0.20.201"
      consensus-bootnode-private-key: "bc971f814d7bd37f7502cc67408c4f2c5a06e1b3d48dc041e42b5478154df1a8" # private key for the bootnode to use
      consensus-bootnode-enr-port: 9001 #port in the enr
      consensus-bootnode-api-port: 6000 # port for web api.
      consensus-bootnode-enr-file: "/data/eth2-bootnode-enr.dat" # this must match the file at the top.

gazer-instances:
    beacon-chain-gazer1:
      image: "beacon-chain-gazer"
      tag: "latest"
      start-ip-address: "10.0.20.200"
      consensus-beacon-api-ip-and-port: "http://10.0.20.10:5000"
      num-nodes: 1
      entrypoint: "/bin/bash /beacon_gazer_setup.sh"

      